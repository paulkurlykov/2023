// [1] - –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä if and else
// [2] - else if (–º–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏–π)
// [3] - switch
// [4] - —Ñ—É–Ω–∫—Ü–∏—è —Å return –≤–º–µ—Å—Ç–æ —É—Å–ª–æ–≤–∏—è
// [5] - —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
// [6] - –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É—Å–ª–æ–≤–∏–π —Å —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º

///[1]/// SIMPLE IF AND ELSE

let age = 19;
let isOldEnough = age >= 18;

if (isOldEnough) {
  console.log('Sarah cant start driving license üòÄ');
}

let promptAge = prompt('Write your age here', '');

if (promptAge >= 18) {
  alert('Okay, go ahead, lucky man');
} else {
  const yearWait = 18 - promptAge;
  alert(
    `fuck you, bastard, get off, motherfucker! You sould wait for ${yearWait} years!`
  );
}

let birthYear = 1991;
let century;

if (birthYear <= 2000) {
  century = 20;
} else {
  century = 21;
}

console.log(century);

///[2]/// ELSE IF
var names = [
  'Hole-in-one!',
  'Eagle',
  'Birdie',
  'Par',
  'Bogey',
  'Double Bogey',
  'Go Home!',
];
function golfScore(par, strokes) {
  // Only change code below this line
  if (strokes == 1) {
    return names[0];
  } else if (strokes <= par - 2) {
    return names[1];
  } else if (strokes == par - 1) {
    return names[2];
  } else if (strokes == par) {
    return names[3];
  } else if (strokes == par + 1) {
    return names[4];
  } else if (strokes == par + 2) {
    return names[5];
  } else if (strokes >= par + 3) {
    return names[6];
  } else {
    return 'Change Me';
  }
}

console.log(golfScore(5, 4));

/// else if –ø–æ–ø—Ä–æ—â–µ –ø—Ä–∏–º–µ—Ä

let day = 'thursday';

if (day === 'wednesday') {
  console.log("Today is wednesday. It's a little friday!");
} else if (day === 'thursday') {
  console.log('Today is thursday. A weekend is coming!');
} else {
  console.log("I don't know what a day is today");
}

///[3]/// SWITCH (–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ else if, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –º–Ω–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å)

function caseInSwitch(val) {
  // –Ω–∏–∂–µ if else –≤–∞—Ä–∏–∞–Ω—Ç —ç—Ç–æ–≥–æ –∫–æ–¥–∞ (–¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è)
  var answer = '';
  // Only change code below this line
  switch (
    val // –≤ —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞–µ–º, —Å —á–µ–º –º—ã –±—É–¥–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å - –∑–Ω–∞—á–µ–Ω–∏–µ (—á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫–∞, –±—É–ª–µ–º), –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∞—Ä–≥—É–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏
  ) {
    case 1:
      answer = 'alpha'; // [case] - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è switch, [1] - –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –º—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º, [:] - –ø–æ—Å–ª–µ –¥–≤–æ–µ—Ç–æ—á–∏—è –º—ã –Ω–∞–∑–Ω–∞—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ. //=>//
      //=>// –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –º—ã –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π answer [answer = 'alpha'], –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—à–µ.
      break; // —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–±–æ—Ä, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ —ç—Ç–æ–º case –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å break, —Ç–æ –æ–Ω —Ç–∞–∫ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –≤—Å–µ –≥–æ–Ω—è—Ç—å –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏
    case 2:
      answer = 'beta';
      break;
    case 3:
      answer = 'gamma';
      break;
    case 4:
      answer = 'delta';
      break;
    default:
      answer = 'no matching'; // –ù–ï –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω, –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –Ω–∞–∑–Ω–∞—á–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–æ
      break; // –ø–æ—Å–ª–µ default —Ç–æ–∂–µ –Ω—É–∂–µ–Ω break
  }
  return answer;
}

console.log(caseInSwitch(3));

//// —Ç–æ–∂–µ —Å–∞–º–æ–µ, —Ç–æ–ª—å–∫–æ —Å if else

function casInSwitch2(val) {
  var answer = '';
  if (val == 1) {
    answer = 'alpha';
  } else if (val == 2) {
    answer = 'beta';
  } else if (val == 3) {
    answer = 'gamma';
  } else if (val == 4) {
    answer = 'delta';
  } else {
    answer = 'no matching';
  }
}

/// –µ—â–µ –ø—Ä–∏–º–µ—Ä switch - –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏

let a = 2 + 2;

switch (a) {
  case 3: //  –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∞ === 3, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–ª–µ–¥ –∫–æ–¥:
    alert('–ú–∞–ª–æ–≤–∞—Ç–æ');
    break;
  case 4: //  –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∞ === 4, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–ª–µ–¥ –∫–æ–¥:
    alert('–í —Ç–æ—á–∫—É!');
    break;
  case 5: // –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
    alert('–ü–µ—Ä–µ–±–æ—Ä');
    break;
  default: // –µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω case –Ω–µ –ø–æ–¥–æ—à–µ–ª, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–æ—Ç —ç—Ç–æ—Ç –∫–æ–¥:
    alert('–ù–µ—Ç —Ç–∞–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π');
}

/// –µ—â–µ –ø—Ä–∏–º–µ—Ä switch - –û–î–ù–û –î–ï–ô–°–¢–í–ò–ï –ù–ê –ù–ï–°–ö–û–õ–¨–ö–û –í–ê–†–ò–ê–ù–¢–û–í

function sequentialSizes(val) {
  var answer = '';
  switch (
    val // –ï–°–õ–ò –£ –ù–ê–° –û–î–ù–û –î–ï–ô–°–¢–í–ò–ï –ù–ê –ù–ï–°–ö–û–õ–¨–ö–û –í–ê–†–ò–ê–ù–¢–û–í (–ö–ï–ô–°–û–í)
  ) {
    case 1: // —á—Ç–æ–±—ã –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –∫–µ–π—Å—ã, –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–∏—à–µ–º –ø–æ—Å–ª–µ –¥–≤–æ–µ—Ç–æ—á–∏—è
    case 2:
    case 3:
      answer = 'Low'; // –∏ –ø–∏—à–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞
      break; // break –ø–∏—à—â–µ–º –ø–æ—Å–ª–µ –∫–µ–π—Å–∞ —Å –¥–µ–π—Å—Ç–≤–∏–µ–º, –∫–∞–∫ –±—ã –ø–æ–¥–∏—Ç–æ–∂–∏–≤–∞–µ–º
    case 4:
    case 5:
    case 6:
      answer = 'Mid'; // –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ if(val === case 4 || val === case 5 || val === case 6) { answer = "Mid"};
      break;
    case 7:
    case 8:
    case 9:
      answer = 'High';
      break;
  }
  return answer;
}

console.log(sequentialSizes(8));

///[4]/// –£–ü–†–û–©–ï–ù–ò–ï IF ELSE - –§–£–ù–ö–¶–ò–Ø C RETURN

function check(a, b) {
  // –ø—Ä–æ—Å—Ç–µ–π—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É true/false
  if (a > b) {
    return true;
  } else {
    return false;
  }
}
console.log(check(6, 4)); // true, –ø–æ—Ç–æ–º—É —á—Ç–æ 6 –±–æ–ª—å—à–µ, —á–µ–º 4

/// –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤

function check2(a, b) {
  return a > b;
} // –∑–¥–µ—Å—å –ø–æ—Å–ª–µ [return] –∏–¥–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –∞ –∑–Ω–∞—á–∏—Ç –±—É–¥–µ—Ç –ª–∏–±–æ true, –ª–∏–±–æ false
console.log(check2(4, 6)); // false, –ø–æ—Ç–æ–º—É —á—Ç–æ 4 –º–µ–Ω—å—à–µ, —á–µ–º 6

///[5]/// –£–ü–†–û–©–ï–ù–ù–´–ô –í–ê–†–ò–ê–ù–¢ –£–°–õ–û–í–ò–ô IF ELSE —á–µ—Ä–µ–∑ –∑–Ω–∞–∫ –≤–æ–ø—Ä–æ—Å–∞ ? (–¢–ï–†–ù–ê–†–ù–´–ô –û–ü–ï–†–ê–¢–û–†)

// —Å–∏–Ω—Ç–∞–∫—Å–∏—Å: [—É—Å–ª–æ–≤–∏–µ –±–µ–∑ —Å–∫–æ–±–æ–∫] ? [–≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è true] : [–≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è false];

function checkEqual(a, b) {
  if (a == b) {
    return 'Equal';
  } else {
    return 'Not Equal';
  }
}

// –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤

function checkingEqual(a, b) {
  return a == b ? 'Equal' : 'Not Equal';
}

console.log(checkEqual(2, 3)); // Not Equal
console.log(checkingEqual(2, 3)); // Not Equal

/// –µ—â–µ –≤–∞—Ä–∏–∞–Ω—Ç

let age1 = 23;
age1 >= 18
  ? console.log('I like to drink wine')
  : console.log("I'd like to drink water");

let drink = age1 >= 18 ? 'wine' : 'water';

console.log(drink);

// the same

let drink2;

if (age1 >= 18) {
  drink2 = 'wine';
} else {
  drink2 = 'water';
}

console.log(drink2);

//// How to use ternary statement in backticks string:

console.log(`I like drink ${age1 >= 18 ? 'wine' : 'water'}`); // –ø–æ–º–µ—Å—Ç–∏–ª–∏ —Å—Ç–µ–π—Ç–º–µ–Ω—Ç –≤ —Å—Ç—Ä–æ–∫—É  —Å–∫–æ—Å—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏

///[6]/// –ú–ù–û–ñ–ï–°–¢–í–û –£–°–õ–û–í–ò–ô –í –£–ü–†–û–©–ï–ù–ù–û–ú –í–ê–†–ò–ê–ù–¢–ï
// [—É—Å–ª–æ–≤–∏–µ –±–µ–∑ —Å–∫–æ–±–æ–∫] ? [–≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è true] : [—É—Å–ª–æ–≤–∏–µ –¥–ª—è else if] ? [–≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è true] : [—É—Å–ª–æ–≤–∏–µ –¥–ª—è else if] ? [–≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è true] : [else –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è false];

function checkSign(num) {
  // –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–¥ –¥–≤–æ–µ—Ç–æ—á–∏–µ–º –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
  return num > 0
    ? 'Positive' // –ø–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ —Ç–∏–ø–∞ if
    : num == 0
    ? 'Zero' // –≤—Ç–æ—Ä–æ–µ —É—Å–ª–æ–≤–∏–µ —Ç–∏–ø–∞ else if
    : 'Negative'; // –æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ (—Å–∞–º–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –ø–∏—à–µ—Ç—Å—è —Ç–∏–ø–∞ else )
}
